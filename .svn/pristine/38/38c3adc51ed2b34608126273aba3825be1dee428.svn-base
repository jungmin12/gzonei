package gzonei.str.web;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.IOUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import egovframework.com.cop.bbs.service.BoardVO;
import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import gzonei.sample.web.SampleController;
import gzonei.str.service.StrService;
import gzonei.util.FileUtils;

@Controller
public class StrController {
	private static final Logger LOGGER = LoggerFactory.getLogger(SampleController.class);
	
	/** SampleService */
	@Resource(name = "StrService")
	private StrService strService;
	
	/** EgovPropertyService */
    @Resource(name = "propertiesService")
    private EgovPropertyService propertyService;
    
    @Resource(name="FileUtils")
	private FileUtils fileUtils;
    
    // 기초 설정  sql문으로 대체
    String useAt = "Y";
	String dspyAt = "Y";
	String freeAt = "Y";
	String delAt = "N";
	String susccessBbs = "BBSMSTR_000000000003";
	String failBbs = "BBSMSTR_000000000004";
	
 	// 게시판 조회
	@RequestMapping(value="/str/strBbsArticleList.do")
	public String strBbsArticleList(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception{
		
		EgovMap searchVO = new EgovMap();
		PaginationInfo paginationInfo = new PaginationInfo();
        BoardVO boardVO = new BoardVO();
        
        if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
        
        paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
        paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
        paginationInfo.setPageSize(boardVO.getPageSize());
      
        searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
        searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
        searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());
		
		searchVO.put("useAt", useAt);
		searchVO.put("dspyAt", dspyAt);
		searchVO.put("freeAt", freeAt);
		searchVO.put("delAt", delAt);
		searchVO.put("susccessBbs", susccessBbs);
		searchVO.put("failBbs", failBbs);
		
		List<?> resultList = strService.strBbsArticleList(searchVO);
		
		int totCnt = strService.selectStrListTotCnt(searchVO);
		paginationInfo.setTotalRecordCount(totCnt);
		

		model.addAttribute("searchVO",searchVO);
		model.addAttribute("paginationInfo", paginationInfo);
		model.addAttribute("totCnt", totCnt);
		model.addAttribute("resultList",resultList);

		
		//샘플 페이지 이동
		
		return "gzonei/str/strBbsArticleList";
	}

	// 실패사례 상세보기
	@RequestMapping(value="/str/strBbsDetail.do")
	public String strBbsDetail(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception{
		EgovMap searchVO = new EgovMap();
		String nttId = request.getParameter("nttId");
		System.out.println("nttId : "+ nttId);
		searchVO.put("nttId", request.getParameter("nttId"));
		// 조회수 1씩 증가
		strService.updateBbsRdcnt(searchVO);
		
		EgovMap resultList = strService.strBbsDetail(searchVO);
		
		String atchFileId = strService.selectAtchFileId(searchVO);
		
		System.out.println("첨부파일 Id : "+ atchFileId);
		if(!(atchFileId == "" || atchFileId == null)) {
			List<?> atchFileDetail = strService.selectAtchFileDetail(atchFileId);
			model.addAttribute("atchFileDetail", atchFileDetail);
		}
//		List<Object> test= strService.selectaAtchFile(nttId);
		model.addAttribute("resultList", resultList);
		
		return "gzonei/str/strBbsDetail";
	}
	
	// 게시물 등록 페이지 이동
	@RequestMapping(value="/strBbsArticleRegist.do")
	public String strBbsArticleRegist(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception{
		return "gzonei/str/strBbsArticleRegist";
	}
	
	// 게시물 글 쓰기
	@RequestMapping(value="/str/strBbsRgst.do")
	public String strBbsRgst(HttpServletRequest request, HttpServletResponse response, Model model, MultipartHttpServletRequest multi) throws Exception{
		EgovMap writeVO = new EgovMap();
		
		// 첨부파일 아이디 가져오기
		String date = fileUtils.getDate();
		System.out.println("date : "+date);
		
		String atchFileId = fileUtils.insertFileInf(multi,"BBS_","",date);
		
		System.out.println("파일아이디 : "+ atchFileId );
		
		System.out.println("시간 : "+ getDate() );
		writeVO.put("atchFileId", atchFileId);
		writeVO.put("bbsId", request.getParameter("bbsId"));
		writeVO.put("nttSj", request.getParameter("nttSj"));
		writeVO.put("nttCn", request.getParameter("nttCn"));
		writeVO.put("useAt", request.getParameter("useAt"));
		writeVO.put("ntceBgnde", getDate());		
		writeVO.put("frstRegisterId", request.getParameter("frstRegisterId"));		
		writeVO.put("freeAt", request.getParameter("freeAt"));		
		writeVO.put("dspyAt", request.getParameter("dsplyAt"));		
		strService.strBbsRgst(writeVO);

		return "redirect:/str/strBbsArticleList.do";
	}
	
	// 게시물 수정 페이지 이동
	@RequestMapping(value="/str/strBbsArticleUpdate.do")
	public String strBbsArticleUpdate(HttpServletRequest request, HttpServletResponse response, Model model, MultipartHttpServletRequest multi) throws Exception{
		EgovMap searchVO = new EgovMap();
		String nttId = request.getParameter("nttId");
		System.out.println("nttId : "+nttId);
		searchVO.put("nttId", nttId);
		EgovMap result = strService.strBbsDetail(searchVO);
		
		String atchFileId = strService.selectAtchFileId(searchVO);
		
		System.out.println("첨부파일 Id : "+ atchFileId);
		if(!(atchFileId == "" || atchFileId == null)) {
			List<?> atchFileDetail = strService.selectAtchFileDetail(atchFileId);
			model.addAttribute("atchFileDetail", atchFileDetail);
		}
		model.addAttribute("result", result);
		return "gzonei/str/strBbsArticleUpdate";
	}
	
	// 게시물 수정
	@RequestMapping(value="/str/strBbsArticleUdt.do")
	public String updateListBoard(HttpServletRequest request, HttpServletResponse response, Model model, MultipartHttpServletRequest multi) throws Exception{
		
		String nttId = request.getParameter("nttId");
		String uploadDt = request.getParameter("uploadDt");
		if(uploadDt == null || uploadDt == "") {
			uploadDt = fileUtils.getDate();
			System.out.println("date : "+uploadDt);
		}
		String atchFileId = request.getParameter("atchFileId");
		System.out.println("수정전  : "+atchFileId);
		atchFileId = fileUtils.insertFileInf(multi,"BBS_",atchFileId,uploadDt);
		System.out.println("수정후 : "+atchFileId);
		
		EgovMap updateVO = new EgovMap();
		updateVO.put("nttId", nttId);
//		updateVO.put("seCode", request.getParameter("seCode"));
//		updateVO.put("nttSj", request.getParameter("nttSj"));
//		updateVO.put("nttCn", request.getParameter("nttCn"));
//		updateVO.put("freeAt", request.getParameter("freeAt"));		
//		updateVO.put("dspyAt", request.getParameter("dsplyAt"));		
//		updateVO.put("delAt", request.getParameter("delAt"));
		updateVO.put("atchFileId", atchFileId);
		strService.updateListBoard(updateVO);
		return "redirect:/str/strBbsArticleList.do";
	}
	

	
	// 게시물 삭제
	@RequestMapping(value="/str/strBbsArticleDelete.do")
	public String strBbsArticleDelete(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception{
		EgovMap deleteVO = new EgovMap();
		deleteVO.put("nttId", request.getParameter("nttId"));
		deleteVO.put("atchFileId", request.getParameter("atchFileId"));
		
		strService.deleteAtchFile(deleteVO);
		strService.deleteAtchFileAtrb(deleteVO);
		strService.strBbsArticleDelete(deleteVO);
		return "redirect:/str/strBbsArticleList.do";
	}
	
	// 첨부파일 다운로드
	@RequestMapping(value = "/str/downloadFile.do")
	public ResponseEntity<byte[]> downloadFile(HttpServletRequest request, HttpServletResponse response, Model model)throws Exception{
		InputStream in = null;
		ResponseEntity<byte[]> entity = null;
		String fileStreCours= request.getParameter("fileStreCours");
		String orignlFileNm= request.getParameter("orignlFileNm");
		System.out.println("다운로드 받는 파일 경로 : "+fileStreCours);
		System.out.println("진짜 파일 명 : "+orignlFileNm);
		try {
			HttpHeaders headers = new HttpHeaders();
			in = new FileInputStream(fileStreCours);					
			System.out.println("다운로드 받는 파일 경로 : "+fileStreCours);
			headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);
			headers.add("Content-Disposition", "attachment; filename=\"" + new String(orignlFileNm.getBytes("UTF-8"), "ISO-8859-1")+"\""); 
			entity = new ResponseEntity<byte[]>(IOUtils.toByteArray(in), headers, HttpStatus.OK);
		}catch(Exception e) {
			e.printStackTrace();
			entity = new ResponseEntity<byte[]>(HttpStatus.BAD_REQUEST);
		}finally {
			in.close();
		}
		return entity;
	}
	//	파일 삭제
	@RequestMapping(value = "/str/deleteAtchFile.do")
	public String deleteAtchFile(HttpServletRequest request, HttpServletResponse response, Model model) throws Exception{
		EgovMap searchVO = new EgovMap();
		String fileSn = request.getParameter("fileSn");
		String atchFileId = request.getParameter("atchFileId");
				
		System.out.println("fileSn : "+fileSn);
		System.out.println("atchFileId : "+ atchFileId);
		
		searchVO.put("atchFileId", atchFileId);
		searchVO.put("fileSn", fileSn);
		strService.deleteAtchFile(searchVO);

		return "redirect:/str/strBbsDetail.do";
	}

	// 현재 시간 가져오기
	private static String getDate() {

		String rtnStr = null;

		// 문자열로 변환하기 위한 패턴 설정(년도-월-일 시:분:초:초(자정이후 초))
		String pattern = "YYYY-MM-dd";

		SimpleDateFormat sdfCurrent = new SimpleDateFormat(pattern);
		Date date = new Date();

		rtnStr = sdfCurrent.format(date);

		return rtnStr;
	}
}
