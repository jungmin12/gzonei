package gzonei.sample.web;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.lang.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import egovframework.com.cop.bbs.service.BoardVO;
import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import gzonei.sample.service.FileUploadVO;
import gzonei.sample.service.SampleService;

/**
* 
* 샘플 Controller
* @author PODO 개발3팀 김승제
* @since 2021.01.26
* @version 1.0
* @see
* ************ 개발 고려사항  ************ 
*
*
*
* <pre>
* << 개정이력(Modification Information) >>
*
*   수정일     	 	수정자          	수정내용
*  -------    --------    ---------------------------
*  2021.01.26      김승제         		최초 생성
*  
*
*  </pre>
*/
@Controller
public class SampleController {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(SampleController.class);
	
	/** SampleService */
	@Resource(name = "SampleService")
	private SampleService sampleService;
	
    /** EgovPropertyService */
    @Resource(name = "propertiesService")
    private EgovPropertyService propertiesService;
    
	/**
	 * 샘플 조회(코드리스트) 페이지
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException , IOException
	 */
	@RequestMapping(value="/sample/selectSamplePage.do")
	public String selectSamplePage(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("codeIdNm") && !"".equals(request.getParameter("codeIdNm"))) {
			searchVO.put("codeIdNm", request.getParameter("codeIdNm"));
		}else {
			searchVO.put("codeIdNm", "");
		}
		
		List<?> resultList = sampleService.selectSampleList(searchVO);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		
		//샘플 페이지 이동
		return "gzonei/sample/sampleView";
	}
	
	@RequestMapping(value="/sample/ckuploadSamplePage.do")
	public String ckuploadSamplePage(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		BoardVO boardVO = new BoardVO();
		if(null != request.getParameter("codeIdNm") && !"".equals(request.getParameter("codeIdNm"))) {
			searchVO.put("codeIdNm", request.getParameter("codeIdNm"));
		}else {
			searchVO.put("codeIdNm", "");
		}
		
		List<?> resultList = sampleService.selectSampleList(searchVO);
		
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("boardVO",boardVO);
		model.addAttribute("resultList",resultList);
		
		//샘플 페이지 이동
		return "gzonei/sample/ckeditor_sample";
	}
	
	@RequestMapping(value="/ckupload.do", method=RequestMethod.POST)
	@ResponseBody
	public String Board_ckupload(@ModelAttribute("fileUploadVO") FileUploadVO fileUploadVO,
			HttpServletRequest req, HttpServletResponse resp, 
	            MultipartHttpServletRequest multiFile) throws Exception {
		resp.setCharacterEncoding("utf-8");
		resp.setContentType("text/html;charset=utf-8");
		PrintWriter printWriter = null;
		OutputStream out = null;
		String Fn = fileUploadVO.getUpload().getOriginalFilename();
		MultipartFile file = multiFile.getFile("upload");
		if(file != null){
			if(file.getSize() > 0 && StringUtils.isNotBlank(file.getName())){
				if(file.getContentType().toLowerCase().startsWith("image/")){
					try{
						String fileName = file.getName();
						byte[] bytes = file.getBytes();
						//실제경로
						String uploadPath = "C:/egovframework/ckupload/";
						File uploadFile = new File(uploadPath);
						if(!uploadFile.exists()){
							uploadFile.mkdirs();
						}
						fileName = Fn;
						String newUploadPath = uploadPath + fileName;
						int num = 0;
						String[] fileNameArray = Fn.split("[.]");
						String filenameOnly = fileNameArray[0];
						String fileExt = fileNameArray[1];
						while(fileExistChk(newUploadPath)) {
							num ++;
							String filenameOnlyOutput = filenameOnly + "(" + String.valueOf(num) + ")";
							fileName = filenameOnlyOutput + "." + fileExt;
							newUploadPath = uploadPath + fileName;
						}
						out = new FileOutputStream(new File(newUploadPath));
						out.write(bytes);
	                   
						String callback = req.getParameter("CKEditorFuncNum");
						printWriter = resp.getWriter();
						String fileUrl = "/ckupload/" + fileName;
						printWriter.println("<script type='text/javascript'>window.parent.CKEDITOR.tools.callFunction("
					       + callback
					       + ",'"
					       + fileUrl
					       + "','이미지를 업로드 하였습니다.'"
					       + ")</script>");
						printWriter.flush();
	               }catch(IOException e){
	                   e.printStackTrace();
	               }finally{
	                   if(out != null){
	                       out.close();
	                   }
	                   if(printWriter != null){
	                       printWriter.close();
	                   }		
					}
				}
			}
		}
		return null;
	}
	private boolean fileExistChk(String path) {
		boolean booleanValue = true;
		File newUploadfile = new File(path);
		if(newUploadfile.exists()) {
			booleanValue = true;
		}else {
			booleanValue = false;
		}
		return booleanValue;
	}
}
