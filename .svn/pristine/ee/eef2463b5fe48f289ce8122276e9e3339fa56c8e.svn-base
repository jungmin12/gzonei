package gzonei.admin.member.web;


import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;

import egovframework.com.cop.bbs.service.BoardVO;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import gzonei.admin.member.service.MemberService;

/**
* 
* MemberController
* @author PODO 개발3팀 김승제
* @since 2021.01.26
* @version 1.0
* @see
* ************ 개발 고려사항  ************ 
*
*
*
* <pre>
* << 개정이력(Modification Information) >>
*
*   수정일     	 	수정자          	수정내용
*  -------    --------    ---------------------------
*  2021.01.26      김승제         		최초 생성
*  
*
*  </pre>
*/
@Controller
public class MemberController {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(MemberController.class);
	
	/** MemberService */
	@Resource(name = "MemberService")
	private MemberService memberService;
	
	
	/** 희진 */
	
	/**
	 * 회원목록 조회
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberList.do")
	public String selectMemberList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("codeIdNm") && !"".equals(request.getParameter("codeIdNm"))) {
			searchVO.put("codeIdNm", request.getParameter("codeIdNm"));
		}else {
			searchVO.put("codeIdNm", "");
		}
		PaginationInfo paginationInfo = new PaginationInfo();
		BoardVO boardVO = new BoardVO();
		if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
		paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
		paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
		paginationInfo.setPageSize(boardVO.getPageSize());
		
		searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
		searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
		searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());
		
		List<?> resultList = memberService.selectMemberList(searchVO);
		int totCnt = memberService.selectMemberListTotCnt(searchVO);
		
		paginationInfo.setTotalRecordCount(totCnt);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		model.addAttribute("paginationInfo", paginationInfo);
		
		return "gzonei/admin/member/memberList";
	}
	
	/**
	 * 회원정보 상세보기
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberView.do")
	public String selectMemberDetail(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		EgovMap resultVO = memberService.selectMemberDetail(searchVO);
		
		model.addAttribute("resultVO",resultVO);
		
		return "gzonei/admin/member/memberView";
	}
	
	/**
	 * 회원 승인상태로 변경하기
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberConfirm.do")
	public void updateMemberState(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{

		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		
		int resultCnt = memberService.updateMemberState(searchVO);
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
		
	}
	
	@RequestMapping(value="/admin/member/infoList.do")
	public void selectInfoList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("userId", request.getParameter("userId"));
		String type = request.getParameter("type");
		
		List<?> result = new ArrayList<>();
		if("payment".equals(type)) {
			result = memberService.selectPaymentList(searchVO);
			resultMap.put("paymentList", result);
		}else if("chkInfo".equals(type)) {
			result = memberService.selectChkInfoList(searchVO);
			resultMap.put("chkInfoList", result);
		}
		
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
	}
	
	/**
	 * 회원등록 페이지
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberReg.do")
	public String adminMemberReg(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("codeId", "");
		List<?> code_result = memberService.selectCodeDetail(searchVO);
		
		model.addAttribute("code_result",code_result);
		
		return "gzonei/admin/member/memberReg";
	}
	
	@RequestMapping(value="/admin/member/memberActionReg.do")
	public void adminMemberActionReg(@RequestParam Map<String, Object> commandMap, HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		
		commandMap.put("mberSecsnAt", "N");// 회원탈퇴여부

	     // 사업자회원일 경우 
	    if ("02".equals(commandMap.get("indvdlMberCode"))) {
	        commandMap.put("mberSttusCode", "1");	// 회원상태(승인요청)
	    }
	     // 개인 또는 관리자회원일 경우
	    else {
	    	commandMap.put("mberSttusCode", "2");	// 회원상태(승인)
	    }
	     
//	    HttpSession session = request.getSession();
//	    commandMap.put("frstRegisterId", (String) session.getAttribute("USER_ID"));
	     
	     // 사업자회원이 아닐경우에만 승인일자 입력 => 쿼리에서 하기
	    if (!"02".equals(commandMap.get("indvdlMberCode"))) {			
//	    	 member.setAPPRO_DY(nowDt);
	    }
		    
	    int resultCnt = memberService.insertMemberInfo(commandMap);
	    resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);	
	}
	
	/** 다현 */
	
}
