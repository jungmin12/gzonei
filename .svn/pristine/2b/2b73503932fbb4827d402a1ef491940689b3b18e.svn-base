package gzonei.admin.member.web;


import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.google.gson.Gson;

import egovframework.com.cop.bbs.service.BoardVO;
import egovframework.com.utl.fcc.service.EgovStringUtil;
import egovframework.com.utl.sim.service.EgovFileScrty;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import gzonei.admin.member.service.MemberService;
import gzonei.cmmn.service.CmmnService;

/**
* 
* MemberController
* @author PODO 개발3팀 김승제
* @since 2021.01.26
* @version 1.0
* @see
* ************ 개발 고려사항  ************ 
*
*
*
* <pre>
* << 개정이력(Modification Information) >>
*
*   수정일     	 	수정자          	수정내용
*  -------    --------    ---------------------------
*  2021.01.26      김승제         		최초 생성
*  
*
*  </pre>
*/
@Controller
public class MemberController {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(MemberController.class);
	
	/** MemberService */
	@Resource(name = "MemberService")
	private MemberService memberService;
	
	/** CmmnService */
	@Resource(name = "cmmnService")
	private CmmnService cmmnService;
	
	/** 희진 */
	
	/**
	 * 회원목록 조회
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberList.do")
	public String selectMemberList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("codeIdNm") && !"".equals(request.getParameter("codeIdNm"))) {
			searchVO.put("codeIdNm", request.getParameter("codeIdNm"));
		}else {
			searchVO.put("codeIdNm", "");
		}
		
		PaginationInfo paginationInfo = new PaginationInfo();
		BoardVO boardVO = new BoardVO();
		if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
		paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
		paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
		paginationInfo.setPageSize(boardVO.getPageSize());
		
		searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
		searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
		searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());

		
		
		List<?> resultList = memberService.selectMemberList(searchVO);
		int totCnt = memberService.selectMemberListTotCnt(searchVO);
		
		paginationInfo.setTotalRecordCount(totCnt);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		model.addAttribute("paginationInfo", paginationInfo);
		
		return "gzonei/admin/member/memberList";
	}
	
	/**
	 * 회원정보 상세보기
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberView.do")
	public String selectMemberDetail(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();

		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		List<?> mberGradCode = cmmnService.selectCodeList("CMMN","CM00200000");//회원등급코드
		
		EgovMap resultVO = memberService.selectMemberDetail(searchVO);
		
		model.addAttribute("mberGradCode",mberGradCode);
		model.addAttribute("resultVO",resultVO);
		
		return "gzonei/admin/member/memberView";
	}
	
	/**
	 * 회원 승인상태로 변경하기
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberConfirm.do")
	public void updateMemberState(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{

		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		
		int resultCnt = memberService.updateMemberState(searchVO);
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
		
	}
	
	/**
	 * 결제내역, 조회이력 조회
	 * @param request
	 * @param response
	 * @param model
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/infoList.do")
	public void selectInfoList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("userId", request.getParameter("userId"));
		String type = request.getParameter("type");
		
		List<?> result = new ArrayList<>();
		if("payment".equals(type)) {
			result = memberService.selectPaymentList(searchVO);
			resultMap.put("paymentList", result);
		}else if("chkInfo".equals(type)) {
			result = memberService.selectChkInfoList(searchVO);
			resultMap.put("chkInfoList", result);
		}
		
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
	}
	
	/**
	 * 회원등록 페이지
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberReg.do")
	public String adminMemberReg(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		List<?> indvdlMberCode = cmmnService.selectCodeList("CMMN","CM00210000");//개인회원코드
		model.addAttribute("indvdlMberCode",indvdlMberCode);
		
		return "gzonei/admin/member/memberReg";
	}
	
	@RequestMapping(value="/admin/member/memberIdChk.do")
	public void adminMemberIdChk(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{

		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("checkId", request.getParameter("checkId"));
		
		int resultCnt = memberService.selectMemberIdChk(searchVO);
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
		
	}
	/** AJAX 호출시
	@RequestMapping(value="/admin/member/memberActionReg.do")
	public void adminMemberActionReg(@RequestParam Map<String, Object> commandMap, HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		
		commandMap.put("mberSecsnAt", "N");// 회원탈퇴여부

	     // 사업자회원일 경우 
	    if ("2".equals(commandMap.get("indvdlMberCode"))) {
	        commandMap.put("mberSttusCode", "1");	// 회원상태(승인요청)
	    }
	     // 개인 또는 관리자회원일 경우
	    else {
	    	commandMap.put("mberSttusCode", "2");	// 회원상태(승인)
	    }
	     
//	    HttpSession session = request.getSession();
//	    commandMap.put("frstRegisterId", (String) session.getAttribute("USER_ID"));
	    commandMap.put("frstRegisterId", "test");
	     
	    int resultCnt = memberService.insertMemberInfo(commandMap);
	    resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);	
	}
	*/
	/**
	 * 회원 등록 처리
	 * @param commandMap
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberActionReg.do")
	public String adminMemberActionReg(@RequestParam Map<String, Object> commandMap, HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		commandMap.put("mberSecsnAt", "N");// 회원탈퇴여부
		
		// 사업자회원일 경우 
		if ("CM00210002".equals(commandMap.get("indvdlMberCode"))) {
			commandMap.put("mberSttusCode", "CM00220001");	// 회원상태(승인요청)
		}
		// 개인 또는 관리자회원일 경우
		else {
			commandMap.put("mberSttusCode", "CM00220002");	// 회원상태(승인)
		}
		
//	    HttpSession session = request.getSession();
//	    commandMap.put("frstRegisterId", (String) session.getAttribute("USER_ID"));
		commandMap.put("frstRegisterId", "test");
		
		memberService.insertMemberInfo(commandMap);
		
		return "redirect:/admin/member/memberList.do";
	}
	
	/** 회원 수정 처리
	 * @param commandMap
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberActionUdt.do")
	public String adminMemberActionUdt(@RequestParam Map<String, Object> commandMap, HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		commandMap.put("lastUpdusrId", "test");
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		EgovMap resultVO = memberService.selectMemberDetail(searchVO);
		if(!commandMap.get("setleMemo").equals(resultVO.get("setleMemo"))) {
			commandMap.put("setleMemoDt", "Y");
		}
		if(!commandMap.get("edcMemo").equals(resultVO.get("edcMemo"))) {
			commandMap.put("edcMemoDt", "Y");
		}
		if(!commandMap.get("etcMemo").equals(resultVO.get("etcMemo"))) {
			commandMap.put("etcMemoDt", "Y");
		}
		System.out.println("commandMap => " + commandMap);
		memberService.adminMemberActionUdt(commandMap);
		
		return "redirect:/admin/member/memberList.do";
	}
	
	/** 다현 */
	
	/**
	 * 
	 * 접속이력목록 조회
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	
	@RequestMapping(value="/admin/member/connectList.do")
	public String selectConnectList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("userId") && !"".equals(request.getParameter("userId"))) {
			searchVO.put("userId", request.getParameter("userId"));
		}else {
			searchVO.put("userId", "");
		}
	    PaginationInfo paginationInfo = new PaginationInfo();
        BoardVO boardVO = new BoardVO();
        if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
        paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
        paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
        paginationInfo.setPageSize(boardVO.getPageSize());
      
        searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
        searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
        searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());

		List<?> resultList = memberService.selectConnectList(searchVO);
		int totCnt = memberService.selectConnectListTotCnt(searchVO);
		paginationInfo.setTotalRecordCount(totCnt);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		model.addAttribute("totCnt",totCnt);
		model.addAttribute("paginationInfo",paginationInfo);
		return "gzonei/admin/member/connectList";
		
	}
	
	
	/**
	 * 
	 * 사용자접속이력조회
	 * 
	 * @param request
	 * @param response
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@ResponseBody
	@RequestMapping(value="/admin/member/userConnectList.do",produces="application/json;charset=UTF-8")
	public String selectUserConnectHist(HttpServletRequest request, HttpServletResponse response) throws SQLException, IOException{
		String userId = request.getParameter("userId");
		EgovMap searchVO = new EgovMap();
		searchVO.put("userId", userId);
		
		List<?> resultList = memberService.selectUserConnectHist(searchVO);
	    
		Gson gson = new Gson();
		String json = gson.toJson(resultList);
		
		return json;
	}
	
	/**
	 * 
	 * 패널티목록조회 
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/penaltyList.do")
	public String selectPenaltyList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("userId") && !"".equals(request.getParameter("userId"))) {
			searchVO.put("userId", request.getParameter("userId"));
		}else {
			searchVO.put("userId", "");
		}
	    PaginationInfo paginationInfo = new PaginationInfo();
        BoardVO boardVO = new BoardVO();
        if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
        paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
        paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
        paginationInfo.setPageSize(boardVO.getPageSize());
      
        searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
        searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
        searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());

		List<?> resultList = memberService.selectPenaltyList(searchVO);
		int totCnt = memberService.selectPenaltyListTotCnt(searchVO);
		paginationInfo.setTotalRecordCount(totCnt);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		model.addAttribute("totCnt",totCnt);
		model.addAttribute("paginationInfo",paginationInfo);
		return "gzonei/admin/member/penaltyList";
		
	}
	
	/**
	 * 
	 * 사용자 패널티 해제
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/penaltyRelease.do")
	public void updatePenaltyRelease(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{

		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("userId", request.getParameter("userId"));
		
		int resultCnt = memberService.updatePenaltyRelease(searchVO);
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
		
	}
	
	/**
	 * 
	 * 패널티목록 회원상세정보 조회 팝업창 
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/memberDetailPopup.do")
	public void selectMemberDetailView(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		
		Gson gson = new Gson();
		String result = "";
		EgovMap searchVO = new EgovMap();
		
		
		searchVO.put("emplyrId", request.getParameter("emplyrId"));
		EgovMap resultVO = memberService.selectMemberDetail(searchVO);
		
	    result = gson.toJson(resultVO);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(result);		
	}
	
	/**
	 * 
	 * 회원탈퇴신청 목록 조회
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/secessionList.do")
	public String selectSecessionList(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		EgovMap searchVO = new EgovMap();
		if(null != request.getParameter("userId") && !"".equals(request.getParameter("userId"))) {
			searchVO.put("userId", request.getParameter("userId"));
		}else {
			searchVO.put("userId", "");
		}
	    PaginationInfo paginationInfo = new PaginationInfo();
        BoardVO boardVO = new BoardVO();
        if(null != request.getParameter("pageIndex") && !"".equals(request.getParameter("pageIndex"))) {
			boardVO.setPageIndex(Integer.parseInt(request.getParameter("pageIndex")));
		}
        paginationInfo.setCurrentPageNo(boardVO.getPageIndex());
        paginationInfo.setRecordCountPerPage(boardVO.getPageUnit());
        paginationInfo.setPageSize(boardVO.getPageSize());
      
        searchVO.put("firstIndex",paginationInfo.getFirstRecordIndex());
        searchVO.put("lastIndex",paginationInfo.getLastRecordIndex());
        searchVO.put("recordCountPerPage",paginationInfo.getRecordCountPerPage());

		List<?> resultList = memberService.selecSecessionList(searchVO);
		int totCnt = memberService.selectSecessionListTotCnt(searchVO);
		int secsnWaitCnt = memberService.selectSecsnWaitCnt(searchVO);
		
		paginationInfo.setTotalRecordCount(totCnt);
		
		model.addAttribute("searchVO",searchVO);
		model.addAttribute("resultList",resultList);
		model.addAttribute("totCnt",totCnt);
		model.addAttribute("paginationInfo",paginationInfo);
		model.addAttribute("secsnWaitCnt",secsnWaitCnt);
		
		return "gzonei/admin/member/secessionList";
		
	}
	
	/**
	 * 
	 * 탈퇴 승인
	 * 
	 * @param request
	 * @param response
	 * @param model
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/secessionConfirm.do")
	public void updateSecessionConfirm(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{

		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
		searchVO.put("userId", request.getParameter("userId"));
//	    HttpSession session = request.getSession();
//	    searchVO.put("lastUpdusrId", (String) session.getAttribute("USER_ID"));
		
		int resultCnt = memberService.updateSecessionConfirm(searchVO);
		
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
		
	}
	/**
	 * 
	 * 회원탈퇴 신청 페이지로 이동
	 * 
	 * @return
	 * @throws SQLException
	 * @throws IOException
	 */
	@RequestMapping(value="/admin/member/secessionReqst.do")
	public String secessionReqst() throws SQLException , IOException{
		
		return "gzonei/admin/member/secessionReqst";
		
	}
	
	
	@RequestMapping(value="/admin/member/secessionCheck.do")
	public void secessionCheck(HttpServletRequest request, HttpServletResponse response, Model model) throws SQLException , IOException{
		
		Map<String, Object> resultMap = new HashMap<>();
		Gson gson = new Gson();
		String resultList = "";
		EgovMap searchVO = new EgovMap();
		
//	    HttpSession session = request.getSession();
//	    searchVO.put("userId", (String) session.getAttribute("USER_ID"));
		searchVO.put("userId", "thanx55"); //테스트용
		searchVO.put("secsnResn", request.getParameter("secsnResn"));
		int resultCnt = memberService.secessionCheck(searchVO);
		
		resultMap.put("result", resultCnt);
		resultList = gson.toJson(resultMap);
		
		response.setContentType("text/html; charset=UTF-8");
		response.setCharacterEncoding("utf-8");
		response.getWriter().write(resultList);		
	}
	
	
}
