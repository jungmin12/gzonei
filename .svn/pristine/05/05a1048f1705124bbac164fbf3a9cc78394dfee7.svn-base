package gzonei.devlopInfo.service.impl;

import java.io.IOException;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.apache.commons.collections.ListUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import com.sun.star.bridge.oleautomation.Date;

import egovframework.rte.fdl.cmmn.EgovAbstractServiceImpl;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import gzonei.devlopInfo.service.DevlopInfoService;
import gzonei.sample.service.SampleService;

@Service("DevlopInfoService")
public class DevlopInfoServiceImpl extends EgovAbstractServiceImpl implements DevlopInfoService{

	private static final Logger LOGGER = LoggerFactory.getLogger(DevlopInfoServiceImpl.class);
	
	@Resource(name="DevlopInfoDAO")
	private DevlopInfoDAO devlopInfoDAO;

	@SuppressWarnings("unchecked")
	@Override
	public List<?> selectDevlopInfoList(EgovMap map) throws SQLException, IOException {
		try {
			map = IncLowLvList(map);
			return devlopInfoDAO.selectDevlopInfoList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		
		return null;
	}

	@Override
	public int selectDevlopInfoListTotCnt(EgovMap map) throws SQLException, IOException {
		try {
			map = IncLowLvList(map);
			return devlopInfoDAO.selectDevlopInfoListTotCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public EgovMap selectDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int updateDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.updateDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public int deleteDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.deleteDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectPrtnDevlopInfoList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectPrtnDevlopInfoList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public EgovMap selectPrtnDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectPrtnDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int updatePrtnDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.updatePrtnDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}
	
	@Override
	public int deletePrtnDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.deletePrtnDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public int insertDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.insertDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public int insertPrtnDevlopInfoDetail(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.insertPrtnDevlopInfoDetail(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectSimpleDevlopInfoList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectSimpleDevlopInfoList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int selectSimpleDevlopInfoListTotCnt(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectSimpleDevlopInfoListTotCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public EgovMap selectOldFileList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectOldFileList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectDevlopInfoLayerList(EgovMap searchVO) throws SQLException, IOException {
		try {
			searchVO = IncLowLvList(searchVO);
			return devlopInfoDAO.selectDevlopInfoLayerList(searchVO);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectMmnwsBbsListByDwkNm(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectMmnwsBbsListByDwkNm(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}
	@Override
	public int selectMmnwsBbsListByDwkNmCnt(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectMmnwsBbsListByDwkNmCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectDstrcCodeList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDstrcCodeList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectDstrcCodeListAll() throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDstrcCodeListAll();
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}
	
	@Override
	public EgovMap selectDevInfoOldestRewardYr() throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDevInfoOldestRewardYr();
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectDevlopInfoListModal(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDevlopInfoListModal(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int selectDevlopInfoListModalTotCnt(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDevlopInfoListModalTotCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectIntrstList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectIntrstList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int InsertIntrst(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.InsertIntrst(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectInvtListBydwkNo(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectInvtListBydwkNo(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectRecDevInfoLog(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectRecDevInfoLog(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectAdminList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectAdminList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int selectAdminListTotCnt(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectAdminListTotCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@Override
	public List<?> selectDstrcCodeListByUpCd(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectDstrcCodeListByUpCd(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public List<?> selectNewFileList(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectNewFileList(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int selectIntrstChk(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectIntrstChk(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}

	@SuppressWarnings("unchecked")
	@Override
	public EgovMap selectUserPrintCntById(EgovMap map) throws SQLException, IOException {
		try {
			EgovMap egovMap = devlopInfoDAO.selectUserPrintCntById(map);
			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
			String today = LocalDate.now().format(formatter);
			if(null!=egovMap.get("outptCo") /*&& !("").equals(egovMap.get("outptCo"))*/) {
				Timestamp printTs= (Timestamp) egovMap.get("outptDt");
				String printTsStrDate = printTs.toLocalDateTime().format(formatter);
				String printCnt = (String) egovMap.get("outptCo");
				if(/*egovMap.get("outptCo").equals("0") && !*/today.equals(printTsStrDate)) {
					//프린트시간/프린트횟수가 있거나, 있는데 오늘이랑 날짜가 같은경우
					if(egovMap.get("indvdlMberCode").equals("CM00210003")) {
						egovMap.replace("outptDt", printTsStrDate);
						egovMap.replace("outptCo", "20");
					}else {
						egovMap.replace("outptDt", printTsStrDate);
						egovMap.replace("outptCo", printCnt);
					}
				}else {
					//횟수가 없거나, 오늘이랑 날짜가 다르면 새로 날짜와 횟수를 업데이트
					//날짜는 Now()
					map.put("outptDt", "now");
					map.put("outptCo", "20");
					devlopInfoDAO.updateUserPrintCnt(map);
					egovMap.replace("outptDt", today);
					egovMap.replace("outptCo", "20");
				}
			}else {
				//횟수나 날짜가 없으면
				map.put("outptDt", "now");
				map.put("outptCo", "20");
				devlopInfoDAO.updateUserPrintCnt(map);
				egovMap.replace("outptDt", today);
				egovMap.replace("outptCo", "20");
			}
			return egovMap;
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return null;
	}

	@Override
	public int updateUserPrintCnt(EgovMap map) throws SQLException, IOException {
		try {
			return devlopInfoDAO.updateUserPrintCnt(map);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}
	@SuppressWarnings("unchecked")
	private EgovMap IncLowLvList(EgovMap map) {
		EgovMap egm = new EgovMap();
		try {
			if(map.get("ds1") !=null) {
				if(map.get("ds2").equals("")) {
					egm.put("upperCodeId", map.get("ds1"));
					//1Level의 하위
					List<?> totCodeList = new ArrayList<Object>();
					totCodeList = devlopInfoDAO.selectDstrcCodeListByUpCd(egm);
					for(Object obj : totCodeList) {
						EgovMap egovMap = (EgovMap)obj;
						if(egovMap.get("upperCodeAt").equals("Y")) {
							egm.replace("upperCodeId",egovMap.get("codeId"));
							//2Level의 하위
							List<?> ds2CodeList = devlopInfoDAO.selectDstrcCodeListByUpCd(egm);
							totCodeList = ListUtils.union(totCodeList, ds2CodeList);
						}
					}
					map.put("totCodeList", totCodeList);
				}else if(map.get("ds3").equals("")) {
					egm.put("codeId", map.get("ds2"));
					List<?> totCodeList = new ArrayList<Object>();
					totCodeList = devlopInfoDAO.selectDstrcCodeListByUpCd(egm);
					EgovMap ds2Map = (EgovMap)totCodeList.get(0);
					String upCodeAtDs = ds2Map.get("upperCodeAt").toString();
					map.put("upCodeAtDs", upCodeAtDs);
					if(upCodeAtDs.equals("Y")) {
						egm.remove("codeId");
						egm.put("upperCodeId",map.get("ds2"));
						List<?> ds2CodeList = devlopInfoDAO.selectDstrcCodeListByUpCd(egm);
						totCodeList = ListUtils.union(totCodeList, ds2CodeList);
					}
					map.put("totCodeList", totCodeList);
				}
			}
			return map;
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		}
		return null;
	}

	@Override
	public int selectInvtListCnt(EgovMap searchVO) throws SQLException, IOException {
		try {
			return devlopInfoDAO.selectInvtListCnt(searchVO);
		} catch (IOException e) { // 시큐어 코드
			LOGGER.error("#################### IOException: " + e);
		} catch (SQLException e) { // 시큐어 코드
			LOGGER.error("#################### SQLException: " + e);
		} catch (Exception e) {
			LOGGER.error("#################### Exception: " + e);
		} 
		return 0;
	}
}
